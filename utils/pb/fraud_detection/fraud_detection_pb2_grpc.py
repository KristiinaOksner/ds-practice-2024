# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import fraud_detection_pb2 as fraud__detection__pb2


class HelloServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
<<<<<<< Updated upstream
        self.SayHello = channel.unary_unary(
                '/hello.HelloService/SayHello',
                request_serializer=fraud__detection__pb2.HelloRequest.SerializeToString,
                response_deserializer=fraud__detection__pb2.HelloResponse.FromString,
=======
        self.CheckFraudUser = channel.unary_unary(
                '/fraud_detection.FraudDetectionService/CheckFraudUser',
                request_serializer=fraud__detection__pb2.FraudDetectionRequest.SerializeToString,
                response_deserializer=fraud__detection__pb2.FraudDetectionResponse.FromString,
                )
        self.CheckFraudCreditCard = channel.unary_unary(
                '/fraud_detection.FraudDetectionService/CheckFraudCreditCard',
                request_serializer=fraud__detection__pb2.FraudDetectionRequest.SerializeToString,
                response_deserializer=fraud__detection__pb2.FraudDetectionResponse.FromString,
>>>>>>> Stashed changes
                )


class HelloServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

<<<<<<< Updated upstream
    def SayHello(self, request, context):
=======
    def CheckFraudUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckFraudCreditCard(self, request, context):
>>>>>>> Stashed changes
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HelloServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
<<<<<<< Updated upstream
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=fraud__detection__pb2.HelloRequest.FromString,
                    response_serializer=fraud__detection__pb2.HelloResponse.SerializeToString,
=======
            'CheckFraudUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFraudUser,
                    request_deserializer=fraud__detection__pb2.FraudDetectionRequest.FromString,
                    response_serializer=fraud__detection__pb2.FraudDetectionResponse.SerializeToString,
            ),
            'CheckFraudCreditCard': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFraudCreditCard,
                    request_deserializer=fraud__detection__pb2.FraudDetectionRequest.FromString,
                    response_serializer=fraud__detection__pb2.FraudDetectionResponse.SerializeToString,
>>>>>>> Stashed changes
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hello.HelloService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HelloService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
<<<<<<< Updated upstream
    def SayHello(request,
=======
    def CheckFraudUser(request,
>>>>>>> Stashed changes
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
<<<<<<< Updated upstream
        return grpc.experimental.unary_unary(request, target, '/hello.HelloService/SayHello',
            fraud__detection__pb2.HelloRequest.SerializeToString,
            fraud__detection__pb2.HelloResponse.FromString,
=======
        return grpc.experimental.unary_unary(request, target, '/fraud_detection.FraudDetectionService/CheckFraudUser',
            fraud__detection__pb2.FraudDetectionRequest.SerializeToString,
            fraud__detection__pb2.FraudDetectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckFraudCreditCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fraud_detection.FraudDetectionService/CheckFraudCreditCard',
            fraud__detection__pb2.FraudDetectionRequest.SerializeToString,
            fraud__detection__pb2.FraudDetectionResponse.FromString,
>>>>>>> Stashed changes
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
